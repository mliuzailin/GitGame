#define DEF_ANIMATION_CLIP_ON	// アニメーション無効化用のチェック機能追加

/*==========================================================================*/
/*==========================================================================*/
/*!
	@file	AnimationClipFade.cs
	@brief	アニメーションクリップ記憶クラス：フェード特化
	@author Developer
	@date 	2012/11/27
	
 	アニメーションクリップ記憶クラス
	[ Animation ]のコンポーネントが付いたオブジェクトとペアで機能。
	一部の管理クラスが [ Animation ][ AnimationClip～ ] が付いているオブジェクトを拾い上げて、各実装の際に呼出しに使用する
*/
/*==========================================================================*/
/*==========================================================================*/
/*==========================================================================*/
/*		Using																*/
/*==========================================================================*/
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;

/*==========================================================================*/
/*		namespace Begin 													*/
/*==========================================================================*/
/*==========================================================================*/
/*		define																*/
/*==========================================================================*/
/*==========================================================================*/
/*		macro																*/
/*==========================================================================*/
/*==========================================================================*/
/*		class																*/
/*==========================================================================*/
//----------------------------------------------------------------------------
/*!
	@brief	アニメーションイベント
*/
//----------------------------------------------------------------------------
public class AnimationClipFade : AnimationClipPlayer
{
    //----------------------------------------------------------------------------
    /*!
		@brief	スクラッチアニメーションID
	*/
    //----------------------------------------------------------------------------
    public enum FADE_ANIM
    {
        FADE_IN,            //!< アニメーションラベル：フェード：フェードアウト
        FADE_OUT,           //!< アニメーションラベル：フェード：フェードイン
        FADE_WAIT,          //!< アニメーションラベル：フェード：待機
        FADE_WAIT_RAND,     //!< アニメーションラベル：フェード：待機（ランダム再生）
        FADE_EVENT_ACT_000, //!< アニメーションラベル：フェード：イベントアクション
        MAX,                //!< アニメーションラベル：フェード：
    };

    /*==========================================================================*/
    /*		var																	*/
    /*==========================================================================*/
    public AnimationClip m_AnimationFadeIn;         //!< アニメーション実体：フェードイン
    public AnimationClip m_AnimationFadeOut;            //!< アニメーション実体：フェードアウト
    public AnimationClip m_AnimationWait;           //!< アニメーション実体：待機中
    public AnimationClip m_AnimationWaitRand;       //!< アニメーション実体：待機中（ランダム再生）
    public AnimationClip m_AnimationEventAct000;        //!< アニメーション実体：イベントアクション

#if DEF_ANIMATION_CLIP_ON
    public bool m_AnimationEnable = true;   //!< アニメーション有無：
                                            //		※開発時に一部アニメーションを無効にするのに使用。
                                            //		※コンポーネント外すと参照アニメーションがわからなくなるので、
                                            //		※これで例外的に無効化できるようにしておく
#endif

    public bool m_GroupTopFix = false;      //!< 「AnimationClipFadeTop」が接続される予定の一番上のノードを示唆。
                                            //		これがtrueだったら子供を辿ってこのノードに当たった場合に以下階層を登録させない。
                                            //		「AnimationClipFadeTop」がこの階層に接続された場合にのみ以下階層を登録する。

    /*==========================================================================*/
    /*		func																*/
    /*==========================================================================*/
    //----------------------------------------------------------------------------
    /*!
		@brief	基底継承：AnimationClipPlayer：関連するアニメーションをAnimationクリップに追加する
		@note	Start関数で登録しようとすると、一度もアクティブ化されていないオブジェクトに再生処理を発行した際に破綻する。
				基底クラスのAwakeで呼び出すことで登録を保証する
	*/
    //----------------------------------------------------------------------------
    protected override void AnimationSetup()
    {
        //--------------------------------
        // 基底クラスの初期化実行
        //--------------------------------
        base.AnimationSetup();

        //--------------------------------
        // コンポーネントが機能無効指定されているなら無効化
        //--------------------------------
        bool bAnimationEnable = true;
#if DEF_ANIMATION_CLIP_ON
        if (m_AnimationEnable == false)
        {
            bAnimationEnable = false;
        }
#endif
        //--------------------------------
        // アニメーションコンポーネントに要素を追加登録
        //--------------------------------
        if (bAnimationEnable == true)
        {
            SetAnimationClipMax((int)FADE_ANIM.MAX);
            SetAnimationClip((int)FADE_ANIM.FADE_IN, m_AnimationFadeIn, 1000);
            SetAnimationClip((int)FADE_ANIM.FADE_OUT, m_AnimationFadeOut, 1000);
            SetAnimationClip((int)FADE_ANIM.FADE_WAIT, m_AnimationWait, 100);
            SetAnimationClip((int)FADE_ANIM.FADE_WAIT_RAND, m_AnimationWaitRand, 100);
            SetAnimationClip((int)FADE_ANIM.FADE_EVENT_ACT_000, m_AnimationEventAct000, 200);
        }
    }


    //----------------------------------------------------------------------------
    /*!
		@brief	アニメーション操作：アニメーションクリップ再生
	*/
    //----------------------------------------------------------------------------
    public bool PlayFadeAnimation(FADE_ANIM eAnimID)
    {
#if DEF_ANIMATION_CLIP_ON
        //--------------------------------
        // コンポーネントが機能無効指定されているなら無効化
        //--------------------------------
        if (m_AnimationEnable == false)
        {
            return false;
        }
#endif

        //--------------------------------
        // 不具合チェック
        //--------------------------------
        if (eAnimID < 0
        || eAnimID >= FADE_ANIM.MAX
        ) return false;

        //--------------------------------
        // 再生指示
        //--------------------------------
        //		return PlayAnimationClip( (int)eAnimID , true );
        return PlayAnimationClip((int)eAnimID, false);
    }

    //----------------------------------------------------------------------------
    /*!
		@brief	アニメーション操作：アニメーションクリップ再生
	*/
    //----------------------------------------------------------------------------
    public bool PlayFadeAnimation(FADE_ANIM eAnimID, bool bForce)
    {
#if DEF_ANIMATION_CLIP_ON
        //--------------------------------
        // コンポーネントが機能無効指定されているなら無効化
        //--------------------------------
        if (m_AnimationEnable == false)
        {
            return false;
        }
#endif

        //--------------------------------
        // 不具合チェック
        //--------------------------------
        if (eAnimID < 0
        || eAnimID >= FADE_ANIM.MAX
        ) return false;

        //--------------------------------
        // 再生指示
        //--------------------------------
        return PlayAnimationClip((int)eAnimID, bForce);
    }

}

